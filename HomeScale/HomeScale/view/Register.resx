<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRegister.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJTSURBVFhHY/j/
        //+AYqyC9MRYBemJsQrSE2MVpDYGAlEuAY7DzKzMSRhy6ALUxiDLOXnZ7rkkGv7mFuD4BnRECoo8Mofa
        GGZ5YLHVr6WvK/53H0v9j+4IDE3UwnDLiyCWwzC6I7BqphTjshyEl7wq/9+wPe4/Fz87yBHJWA2gBMMs
        Dyi0xGr5jJv5/6deyfnvnW32l52T5TFWQ8jFMMv9C/BbHtPk/JeNi/UtUL0KVoPIwSRa/g6oXhWsD90g
        JlamTKBBJ4EKJNDlcGG45fkW+C1vBlrOyQKyXA2uF9kgkOXAAuMbKM9ycLM9JMYRxFo+9WrOH0U9yd1A
        9Roo+mEMoOXpIMtB2QSkOaLG/pdtmHYtsmJ0DLPcLw+/5Und7n+BDuzAagaIAGaHNFDehFmOhL+qmcvM
        AlqEERLEWg6Oc06W90D18GBHMQdUIOCwHIxDymx+oUcHzHLfXKItRwl2ZMzAyct+PbjM5i+6QcgYVJTC
        HAG3PMecGMtBCQ6n5SAMAiocXKxvUid44XVEULH1L04e9ldAB7/AZflMEi0HYQhBpCM6DiX/bz+QhCFO
        ruUgjGAACwZQ6UTIEegY2fJoEi0HYVQOiY6g1HIQxhQAZhdiHEENy0EYuyDIEZwsb1P7sTsC3XJWMi0H
        YayCIAwE6tgcQU3LQRirIAxDHfEO5ghqWw7CWAWRMcgCoEVv9J2Vf+XOCfifO9v/v6694i+QGKWWgzBW
        QXQMBEJcvGzzgIXQUyB+BiwJFwHFhLGpJRVjFaQnxipIT4xVkJ4YqyD98H8GABQrrRpgLHpCAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        IwAAASMBckF33gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOWSURBVFhHxZVb
        SBRRGMeXoPdeIl2l20NQkt0ozegmaaa1M1l2D3rJqB4kwqD77mwZXivTSrILqWUWZppBhnQBV/OCqGui
        pUWXN8skMwjh6/zP7pxmbdZ2IteFH3zz/y7nP3POzJoCJMURKCk0FmBtU6BkyzJLSh1g4qAraXupam59
        wN3UqNX1QI27dsBTt71064MaLctERAImpvMii2230CzKPKYNYYC2diTciw2hV2hsJmYHWJRUba0IQFC8
        NZiZ+MmbZaXaLNtLWPwdjSyWtbUjgVr0oBczMAszGT8mxloDtLUejSBIts5lhU/dA0Cn2WK3DK/7G+hB
        rzoHJiZJyuzhdR4XWgJlexMaTYl54/XyvoBeboDN0ssDXRG4DonCQv28r/C7Z7P0ckBXBH4zYLJax02V
        rROGw05yA5r1ckbADMzSy2FtOHS6isYEp+sRyfb+ubvONvoTtm4/1uYGQnZmdLL98OtvWkJK8x8GKpo/
        0MECh2FSKpxU0t7Hya/7RMmFtRzE0IpaeulwcT2vfer85N3AvMRcvX36K2wLaWPxG9p07x3NTy4WOmJo
        KzOeCW3hnlzvBtKqOmlpSpVhorJr+EJAuvmKlp2p4iCGBnMr0qp5baGjx7uBorYvYtBoUfN+wHcDCXff
        0sY73ZyEkh6PnFdYT/ytLgF6tXmfDWDx6TvOir3DPq+73kaLjt6nCFulqAnZf41Wna/h+vLUaopQHoke
        MGtvvpgJfDYA58jFXKwnyw2n2M+YSw0UFH+aYvOaaLG1gqZuy6T4210UmnSTwo4/4Kbkgg6avDmNIrNe
        iMOpYtjAmrxGPlC7BWHHymja9iwyrz9F0Tl1XFMNqDVTmIHVua6cFsMGVMKOl/3OsbsK3pBCM/dcEdqo
        GYi70swPEx6tmlt4pJSdj3N8K6KyHVwbNQPRObW09moLWdgBhI5HjoXj8ptpCTtwU7ak0/qizv9vAHeM
        A4Y8B2/BtVYKP1HOPiiPRd2cA4UUdaGWwk+W8y+eqocmFfDDq16r+GwA4Cmo7/OG2689cv+KIQOjwYgG
        rGWtfB/xocFdowH7j8cOEKuD8NFBrVEuP3nl3cB89k+FaxCZ+ZwvtODQHaEhhobXEN8AVTdC+L5L3g04
        uj9TakUrnavqoIddX6nydT+VtvdSemUbBzE0cLXmHa81StvHPu8G/PnzMGCW7AMztqY6/UmgrHzjBsyS
        rRbBWBAgKY5fBk0bufZ9d90AAAAASUVORK5CYII=
</value>
  </data>
</root>