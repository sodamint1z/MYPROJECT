<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>